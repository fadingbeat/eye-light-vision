{"version":3,"sources":["images/cover.webp","components/draw-circle.js","components/RenderCircle.jsx","components/ExerciseCircle.jsx","components/ExerciseGreen.jsx","components/ExerciseBlue.jsx","components/WindowExercises.jsx","components/MainWindow.jsx","App.js","reportWebVitals.js","index.js"],"names":["GeomCircle","geometry","Circle","drawCircle","surface","circle","stroke","color","width","fill","draw","RenderCircle","props","handleIcon","document","getElementsByClassName","className","createSurface","element","querySelector","Surface","create","onTimeout","x","timesRun","interval","setInterval","clearInterval","direction","setState","show","state","onClickRed","setAttribute","onClickBlue","onClickGreen","surfaceRef","createRef","this","window","addEventListener","children","id","ref","onClick","transitionEnterDuration","transitionExitDuration","React","Component","Exercises","toggleDialog","visible","setFullscreen","windowStage","isResizable","align","horizontal","vertical","alignOffset","y","shape","size","text","title","onClose","stage","resizable","Green","primary","themeColor","Blue","WindowExercises","ExerciseCircle","MainWindow","componentDidMount","handleLoad","fragment","createDocumentFragment","appendChild","getElementById","prepend","isReziable","src","cover","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3bec1438.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cover.9957c948.webp\";","import { Circle, geometry } from '@progress/kendo-drawing';\r\nconst { Circle: GeomCircle } = geometry;\r\n\r\nexport default function drawCircle(surface) {\r\n  const geometry = new GeomCircle([ 150, 150  ], 80);\r\n    const circle = new Circle(geometry, {\r\n        stroke: { color: \"red\", width: 1 },\r\n        fill: {color: \"red\"},\r\n    });\r\n\r\n  surface.draw(circle);\r\n}\r\n\r\n\r\n\r\n\r\n","import  React, { createRef } from 'react';\r\nimport { Surface } from '@progress/kendo-drawing';\r\n\r\nimport {  Slide } from '@progress/kendo-react-animation';\r\nimport drawCircle from './draw-circle';\r\nimport { Button } from '@progress/kendo-react-buttons';\r\n\r\nclass RenderCircle extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { show: true, direction: \"left\"};\r\n      this.surfaceRef = createRef()\r\n    }\r\n\r\n    surface;\r\n    componentDidMount() {\r\n      drawCircle(this.createSurface());\r\n      this.setState({\r\n        show: !this.state.show,\r\n      });\r\n      this.onTimeout();\r\n      window.addEventListener('load', this.handleIcon());\r\n    }\r\n  \r\n    componentDidUpdate() {\r\n      drawCircle(this.createSurface());\r\n    }\r\n\r\n    handleIcon = () => {\r\n      let icon = document.getElementsByClassName(\"k-icon k-i-close\");\r\n      icon[2].className = \"k-icon k-i-undo\";\r\n    }\r\n\r\n    createSurface = () => {\r\n      const element = document.querySelector(\"#surface\");\r\n      this.surface = Surface.create(element);\r\n      return this.surface;\r\n    }\r\n\r\n    onTimeout = () => {\r\n      let x;\r\n      let timesRun = 0;\r\n      let interval = setInterval(() => {\r\n        let myDirection = ['left', 'right']\r\n        timesRun += 1;\r\n        for (x of myDirection) {\r\n          if(timesRun === 60){\r\n            clearInterval(interval);\r\n        }\r\n          let direction = x;\r\n          this.setState({\r\n            show: !this.state.show,\r\n            direction: direction,\r\n          });\r\n          break;\r\n        }\r\n      }, 15000);\r\n    }\r\n\r\n    onClickRed = () => {\r\n      document.querySelector(\"#surface circle\").setAttribute(\"stroke\", \"red\");\r\n      document.querySelector(\"#surface circle\").setAttribute(\"fill\", \"red\");\r\n    }\r\n    onClickBlue = () => {\r\n      document.querySelector(\"#surface circle\").setAttribute(\"stroke\", \"blue\");\r\n      document.querySelector(\"#surface circle\").setAttribute(\"fill\", \"blue\");\r\n    }\r\n    onClickGreen = () => {\r\n      document.querySelector(\"#surface circle\").setAttribute(\"stroke\", \"green\");\r\n      document.querySelector(\"#surface circle\").setAttribute(\"fill\", \"green\");\r\n    }\r\n\r\n    render() {\r\n      const { show, direction } = this.state;\r\n      const children = show ? (<div id=\"surface\" ref={this.surfaceRef}/>) : null;\r\n      return (\r\n        <div>\r\n          <dt>\r\n            <Button id=\"btn_r\" onClick={this.onClickRed}>R</Button>\r\n            <Button id=\"btn_g\" onClick={this.onClickGreen}>G</Button>\r\n            <Button id=\"btn_b\" onClick={this.onClickBlue}>B</Button>\r\n          </dt>\r\n          <Slide  direction={direction} transitionEnterDuration={17000}\r\n            transitionExitDuration={20000}>\r\n            {children}\r\n          </Slide>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default RenderCircle;","import React, { Component } from 'react';\r\nimport { FloatingActionButton} from \"@progress/kendo-react-buttons\";\r\nimport { Window } from '@progress/kendo-react-dialogs';\r\nimport RenderCircle from './RenderCircle';\r\nimport \"../styles/MainExercise.scss\";\r\n\r\nclass Exercises extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        visible: false,\r\n        isResizable: false,\r\n        windowStage: \"FULLSCREEN\"\r\n    };\r\n  }\r\n\r\n  toggleDialog = () => {\r\n    this.setState({\r\n      visible: !this.state.visible,\r\n    });\r\n  }\r\n\r\n  setFullscreen = () => {\r\n    this.setState({\r\n        windowStage: \"FULLSCREEN\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-exercise\">\r\n        <FloatingActionButton \r\n          onClick={this.toggleDialog}\r\n          align={{\r\n            horizontal: \"center\",\r\n            vertical: \"middle\",\r\n          }}\r\n          alignOffset={{\r\n            y: -195,\r\n            x: -195,\r\n          }}\r\n          shape={\"circle\"}\r\n          size={\"large\"}\r\n          text=\"R\"\r\n          ></FloatingActionButton>\r\n\r\n        {this.state.visible && \r\n        <Window title={\"Trace the red circle\"} \r\n          onClose={this.toggleDialog} \r\n          stage={this.state.windowStage} \r\n          resizable={this.state.isResizable} \r\n        >\r\n          <RenderCircle/>\r\n        </Window>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Exercises;\r\n\r\n","import React, { Component } from 'react';\r\nimport { FloatingActionButton } from \"@progress/kendo-react-buttons\";\r\nimport { Window } from '@progress/kendo-react-dialogs';\r\nimport \"../styles/MainExercise.scss\";\r\n\r\nclass Green extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        visible: false,\r\n        isResizable: false,\r\n        windowStage: \"FULLSCREEN\"\r\n    };\r\n  }\r\n\r\n  toggleDialog = () => {\r\n    this.setState({\r\n      visible: !this.state.visible,\r\n    });\r\n  }\r\n\r\n  setFullscreen = () => {\r\n    this.setState({\r\n        windowStage: \"FULLSCREEN\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"exercise-green\" className=\"second-exercise\">\r\n        <FloatingActionButton \r\n        primary={true} \r\n        onClick={this.toggleDialog}\r\n        align={{\r\n            horizontal: \"center\",\r\n            vertical: \"middle\",\r\n          }}\r\n        alignOffset={{\r\n          y: -195,\r\n          x: 195,\r\n        }} shape={\"circle\"}\r\n        size={\"large\"}\r\n        text=\"G\"\r\n        themeColor={'success'}\r\n          ></FloatingActionButton>\r\n        {this.state.visible && \r\n        <Window\r\n          onClose={this.toggleDialog} \r\n          stage={this.state.windowStage} \r\n          resizable={this.state.isResizable} >\r\n          <h1>Yet To Be Done</h1>\r\n        </Window>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Green;\r\n\r\n","import React, { Component } from 'react';\r\nimport { FloatingActionButton } from \"@progress/kendo-react-buttons\";\r\nimport { Window } from '@progress/kendo-react-dialogs';\r\nimport \"../styles/MainExercise.scss\";\r\n\r\nclass Blue extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        visible: false,\r\n        isResizable: false,\r\n        windowStage: \"FULLSCREEN\"\r\n    };\r\n  }\r\n\r\n  toggleDialog = () => {\r\n    this.setState({\r\n      visible: !this.state.visible,\r\n    });\r\n  }\r\n\r\n  setFullscreen = () => {\r\n    this.setState({\r\n        windowStage: \"FULLSCREEN\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"exercise-blue\" className=\"third-exercise\">\r\n        <FloatingActionButton \r\n        primary={true} \r\n        onClick={this.toggleDialog}\r\n        align={{\r\n            horizontal: \"center\",\r\n            vertical: \"middle\",\r\n          }}\r\n        alignOffset={{\r\n            y: 195,\r\n          }}\r\n        shape={\"square\"}\r\n        size={\"large\"}\r\n        text=\"B\"\r\n        themeColor={'info'}\r\n        ></FloatingActionButton>\r\n        \r\n        {this.state.visible && \r\n        <Window\r\n          onClose={this.toggleDialog} \r\n          stage={this.state.windowStage} \r\n          resizable={this.state.isResizable} >\r\n          <h1>Yet To Be Done</h1>\r\n        </Window>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Blue;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Button } from \"@progress/kendo-react-buttons\";\r\nimport { Window } from \"@progress/kendo-react-dialogs\";\r\nimport ExerciseCircle from \"./ExerciseCircle\";\r\nimport Green from './ExerciseGreen';\r\nimport Blue from './ExerciseBlue';\r\n\r\nclass WindowExercises extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        visible: false,\r\n        isResizable: false,\r\n        windowStage: \"FULLSCREEN\"\r\n    };\r\n  }\r\n\r\n  toggleDialog = () => {\r\n    this.setState({\r\n      visible: !this.state.visible,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"list-exercises\">\r\n        <Button primary={true} id=\"btn_middle\" \r\n         onClick={this.toggleDialog}>Exercises</Button>\r\n        {this.state.visible &&\r\n          <Window\r\n            onClose={this.toggleDialog}\r\n            stage={this.state.windowStage} \r\n            resizable={this.state.isResizable}>\r\n          <ExerciseCircle />\r\n          <Green/>\r\n          <Blue/>\r\n          </Window>\r\n        }\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default WindowExercises;","import React, { Component } from 'react';\r\nimport cover from \"../images/cover.webp\";\r\nimport \"../styles/MainWindow.scss\";\r\nimport { Button } from \"@progress/kendo-react-buttons\";\r\nimport { Window } from \"@progress/kendo-react-dialogs\";\r\nimport WindowExercises from './WindowExercises';\r\n\r\n\r\nclass MainWindow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        visible: true,\r\n        isReziable: false,\r\n        windowStage: \"FULLSCREEN\"\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    window.addEventListener('load', this.handleLoad);\r\n  }\r\n\r\n  handleLoad = () => {\r\n    let fragment = document.createDocumentFragment();\r\n    fragment.appendChild(document.getElementById('btn_middle'));\r\n    document.getElementById('btn_list').prepend(fragment);\r\n  }\r\n\r\n  toggleDialog = () => {\r\n    this.setState({\r\n      visible: !this.state.visible,\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"main-container\">\r\n        {this.state.visible && \r\n          <Window\r\n            title=\"Eye treatment with color therapy\" \r\n            stage={this.state.windowStage} \r\n            resizable={this.state.isResizable} >\r\n            <img src={cover} alt=\"Illustration of an eye lifting weights\"/>\r\n            <div id=\"btn_list\" className=\"btn-wrapper\">\r\n              <Button primary={true}>Settings</Button>\r\n              <Button primary={true}>Help</Button>\r\n            </div>\r\n            <WindowExercises/>\r\n          </Window>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainWindow;","import '@progress/kendo-theme-default/dist/all.css';\r\nimport './App.scss';\r\nimport React from 'react';\r\nimport MainWindow from \"./components/MainWindow\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Improve your eyesight and your vision!</h1>\r\n      <MainWindow />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}